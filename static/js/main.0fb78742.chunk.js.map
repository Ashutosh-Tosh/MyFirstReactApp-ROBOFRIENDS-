{"version":3,"sources":["reportWebVitals.js","Card.js","CardList.js","SearchBox.js","Scroll.js","ErrorBoundry.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","src_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","target","value","_this2","fetch","response","json","users","_this3","filteredRobots","filter","toLowerCase","includes","length","src_SearchBox","src_Scroll","src_ErrorBoundry","src_CardList","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.0fb78742.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = ({name , email , id }) => {\r\n    \r\n    return(\r\n        \r\n        <div className='tc bg-light-green dib br3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    return(\r\n        <div>{\r\n            robots.map((user, i) => {\r\n                return(\r\n                    <Card \r\n                        key={i} \r\n                        id={robots[i].id} \r\n                        name ={robots[i].name} \r\n                        email={robots[i].email}\r\n                    />\r\n                );\r\n            })\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ( {searchfield, searchChange} ) => {\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input \r\n                className=\"pa3 ba b--green bg-lightest-blue\" \r\n                type = 'search' \r\n                placeholder=\"Search robots\"  \r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY : 'scroll' , border : '5px solid black' , height : '800px' }}>\r\n        {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import { render } from \"@testing-library/react\";\r\nimport React, {Component} from \"react\";\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError){\r\n            return <h1> Ooops. Its not working.</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({ hasError : true })\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from \"react\";\r\nimport CardList from \"./CardList\";\r\nimport SearchBox from './SearchBox';\r\nimport { robots } from './robots';\r\nimport './App.css';\r\nimport Scroll from \"./Scroll\";\r\nimport ErrorBoundry from \"./ErrorBoundry\";\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response =>response.json())\r\n        .then(users => this.setState({ robots : users }));\r\n        \r\n    }\r\n    onSearchChange=(event)=>{\r\n        this.setState({searchfield: event.target.value})\r\n        \r\n       \r\n    }\r\n    render(){\r\n        const filteredRobots = this.state.robots.filter((robots) =>{\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase()); \r\n         })\r\n        if(this.state.robots.length === 0){\r\n            return <h1 className=\"tc ac\">LOADING</h1>\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f1\">RoboFriends</h1>\r\n                    <SearchBox searchChange= {this.onSearchChange} />\r\n                    <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots= {filteredRobots} />\r\n                    </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n//import Card from './Card';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n//import {robots} from './robots';\nimport App from './App'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n  <App/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}